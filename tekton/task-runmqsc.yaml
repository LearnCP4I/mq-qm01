apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: runmqsc-from-configmap
spec:
  params:
  - name: qmname
    type: string
  - name: configmap-name
    type: string
  steps:
    - name: oc-get
      image: registry.redhat.io/openshift4/ose-cli:latest
      script: |
        #!/bin/bash
        pod_name=$(oc get pods --selector=app.kubernetes.io/component=integration,app.kubernetes.io/instance=$(params.qmname),app.kubernetes.io/name=ibm-mq --field-selector=status.phase=Running --no-headers=true | awk '$2 == "1/1" {print $1}')  
        container_name=$(oc get pod $pod_name --template='{{range .status.containerStatuses}}{{if .state.running}}{{.name}}{{"\n"}}{{end}}{{end}}')
        oc exec -it $pod_name -c $container_name -- runmqsc </data/*.mqsc
      volumeMounts:
      - name: configmap-volume
        mountPath: /data
  volumes:
  - name: configmap-volume
    configMap:
      name: $(params.configmap-name)
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: runmqsc-from-configmap
spec:
  params:
  - name: qmname
    type: string
  - name: configmap-name
    type: string
  tasks:
    - name: runmqsc-from-configmap
      taskRef:
        name: runmqsc-from-configmap
      params:
      - name: qmname
        value: $(params.qmname)
      - name: configmap-name
        value: $(params.configmap-name)